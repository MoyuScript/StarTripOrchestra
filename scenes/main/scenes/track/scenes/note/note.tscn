[gd_scene load_steps=11 format=3 uid="uid://13hnb7ikwgcg"]

[ext_resource type="Script" path="res://scenes/main/scenes/track/scenes/note/Note.cs" id="1_y83r8"]
[ext_resource type="PackedScene" uid="uid://bjfdn4wn2ruxf" path="res://scenes/main/scenes/track/scenes/note/scenes/note_broken_particles/note_broken_particles.tscn" id="2_jt2t7"]
[ext_resource type="PackedScene" uid="uid://da6mqiaekrxpc" path="res://scenes/main/scenes/track/scenes/note/scenes/hit_light/hit_light.tscn" id="3_542vv"]

[sub_resource type="Shader" id="Shader_wref4"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_linear_mipmap,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform float alpha = 1.0f;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb+emission_tex)*emission_energy;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_r4ifj"]
render_priority = 0
shader = SubResource("Shader_wref4")
shader_parameter/albedo = Color(1, 0.988235, 0.6, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/emission = Color(1, 0.988235, 0.6, 1)
shader_parameter/emission_energy = 0.5
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/alpha = 0.7

[sub_resource type="BoxMesh" id="BoxMesh_4bf7t"]
material = SubResource("ShaderMaterial_r4ifj")

[sub_resource type="BoxShape3D" id="BoxShape3D_1i5fn"]

[sub_resource type="Animation" id="Animation_pnvbo"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:EmissionEnergy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}

[sub_resource type="Animation" id="Animation_27ude"]
resource_name = "glow"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:EmissionEnergy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.5),
"transitions": PackedFloat32Array(0.5, 0.5, 1),
"update": 0,
"values": [1.0, 3.0, 2.5]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_pqmy8"]
_data = {
"RESET": SubResource("Animation_pnvbo"),
"glow": SubResource("Animation_27ude")
}

[node name="Note" type="CharacterBody3D"]
collision_mask = 2
script = ExtResource("1_y83r8")
NoteBrokenParticlesScene = ExtResource("2_jt2t7")
HitLightScene = ExtResource("3_542vv")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 0)
layers = 3
cast_shadow = 0
gi_mode = 0
mesh = SubResource("BoxMesh_4bf7t")
skeleton = NodePath("")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 0)
shape = SubResource("BoxShape3D_1i5fn")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_pqmy8")
}
